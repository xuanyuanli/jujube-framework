package cn.xuanyuanli.core.util.net;

import java.io.IOException;
import java.io.InputStream;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

import org.apache.commons.io.IOUtils;
import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.Test;

public class HttpsTest {

    private static final String ERROR_URL = "auctionhome";
    public static final String WATERMARK_JPG_BASE64 = "";

    @Test
    public void getStatusCode() {
        Assertions.assertThat(Https.getStatusCode("https://m.auctionhome.cn")).isEqualTo(200);
        Assertions.assertThat(Https.getStatusCode(ERROR_URL)).isEqualTo(500);
    }

    @Test
    public void getAsString() {
        Assertions.assertThat(Https.getAsString("https://m.auctionhome.cn/MP_verify_CGYa76e80m7P1V6D.txt")).isEqualTo("CGYa76e80m7P1V6D");
        Assertions.assertThat(Https.getAsString(ERROR_URL)).isEqualTo("");
    }

    @Test
    public void postAsString() {
        Assertions.assertThat(Https.postAsString(ERROR_URL)).isEqualTo("");
    }

    @Test
    public void getAsStream() throws IOException {
        InputStream inputStream = Https.getAsStream("https://paizj-test.oss-cn-beijing.aliyuncs.com/watermark.png?x-oss-process=style/l_origin_jpg");
        Assertions.assertThat(Base64.getEncoder().encodeToString(inputStream.readAllBytes())).isEqualTo(WATERMARK_JPG_BASE64);
        Assertions.assertThat(IOUtils.toString(Https.getAsStream("https://m.auctionhome.cn/MP_verify_CGYa76e80m7P1V6D.txt"), StandardCharsets.UTF_8))
                .isEqualTo("CGYa76e80m7P1V6D");
        Assertions.assertThatThrownBy(() -> Https.getAsStream(ERROR_URL)).isInstanceOf(RuntimeException.class);
    }
}
